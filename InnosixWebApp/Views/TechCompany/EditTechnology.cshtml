@using InnosixWebApp.Models
@model InnosixWebApp.Models.TCTechnology

@{
    ViewBag.Title = "Edit Technology";
}
<section class="edit-company-details">
    <h2 class="title"></h2>
    <div class="row">
        <div class="col col-xs-12">
            <div id="editAccordion" data-children=".item">
                @Html.Partial("NavigationEditMenu")

                <div class="item item-collapse">
                    <div id="editAccordionThree" class="in tab-pane active" role="tabpanel">
                        <div class="row">
                            <div class="col col-xs-12">
                                
                                @ViewBag.Message

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal edit-technology">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.TCid)

                                        <div>
                                            <div class="row">
                                                <div class="col-md-8">
                                                    <div class="row mt-15">
                                                        <div class="col col-xs-12">
                                                            @Html.DropDownList("ParentTags", ViewData["ParentTags"] as SelectList, "Select tag", new { id = "tag1", @class = "form-control" })
                                                        </div>
                                                    </div>
                                                    <div class="row mt-15">
                                                        <div class="col col-xs-12">
                                                            <select class="form-control" id="tag2" name="tag2"></select>
                                                        </div>
                                                    </div>
                                                    <div class="row mt-15">
                                                        <div class="col col-xs-12">
                                                            <select class="form-control" id="tag3" name="tag3"></select>
                                                        </div>
                                                    </div>
                                                    <div class="row mt-15">
                                                        <div class="col col-xs-12">
                                                            <select class="form-control" id="tag4" name="tag4"></select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="row mt-15">
                                                        <div class="col col-xs-12">
                                                            <div id="selectedTagList">Selected tag:</div>
                                                        </div>
                                                    </div>
                                                    <div class="row mt-15">
                                                        <h5 id="activeSelectedTag">None selected</h5>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row mt-15">
                                                <div class="col col-xs-12 text-right">
                                                    <button type="button" onclick="addTagToList()" class="btn btn-default">Add Tag</button>
                                                </div>
                                            </div>
                                            <div class="row mt-15 tags-labal-section">
                                                <div class="tech-tags col-xs-12">
                                                    <div id="addTagList" class="tech-tags col-xs-12">
                                                        @foreach (var tag in (List<TechTag>)ViewData["Tags"])
                                                        {
                                                            <div class="tech-tags-item">
                                                                <input type="hidden" name="tagIds[]" value="@tag.Id" required="required" />
                                                                <a data-toggle="tooltip" class="tip-bottom" data-original data-id="@tag.Id" data-name="@tag.TagName" title="@tag.Description">
                                                                    @tag.TagName
                                                                </a>
                                                                <span class="remove-btn" onclick="removeListElement('div a[data-id=&quot;@tag.Id&quot;]')">X</span>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AdditionalTechTags, "Additional tech tags", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.AdditionalTechTags, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AdditionalTechTags, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Patents, "Patents", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.Patents, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Patents, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.OtherIpNotPatented, "Other ip not patented", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.OtherIpNotPatented, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.OtherIpNotPatented, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TechnologySectorId, "Technology sector", htmlAttributes: new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.TechnologySectorId, (SelectList)ViewBag.TechSector, "", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TechnologySectorId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        
                                        <div class="form-group multiselect-btns">
                                            <label class="control-label col-md-3">Technology domains <span class="text-danger">*</span></label>
                                            <div class="col-md-9">
                                                @Html.ListBox("TechDomainIds", (MultiSelectList)ViewData["TechDomains"], new { @class = "multi-select", size = 5 })
                                                @Html.ValidationMessage("TechDomainIds", "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row btn-section">
                                            <div class="col col-xs-6">
                                                @Html.ActionLink("Back", "Index", "", htmlAttributes: new { @class = "btn btn-default" })
                                            </div>
                                            <div class="col-xs-6 text-right">
                                                <input type="submit" value="Save" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/jscript">

    $(function () {
        $('#tag1').change(function () {
            $('#tag2, #tag3, #tag4').find('option').remove();
            getTagChildList('#tag1', '#tag2');
            changeTagSelected();
        });

        $('#tag2').change(function () {
            $('#tag3, #tag4').find('option').remove();
            getTagChildList('#tag2', '#tag3');
            changeTagSelected();
        });

        $('#tag3').change(function () {
            $('#tag4').find('option').remove();
            getTagChildList('#tag3', '#tag4');
            changeTagSelected();
        });
        
        $('#tag4').change(function () {
            changeTagSelected();
        });

        function getTagChildList(selectParentId, selectChildId) {
            $.getJSON('/TechCompany/TagChildList/' + $(selectParentId).val(), function (data) {
                if (data.length <= 0)
                    return false;
                var items = '<option>Select tag</option>';
                $.each(data, function (i, tag) {
                    items += "<option value='" + tag.Value + "'>" + tag.Text + "</option>";
                });
                $(selectChildId).html(items);
            });
        };
    });

    function addTagToList() {
        if (isNumeric($('#tag4').val())) {
            if (checkIfAlreadyAdded($('#tag4').val()))
                return false;
            createListElement('#tag4');
            return false;
        }
        if (isNumeric($('#tag3').val())) {
            if (checkIfAlreadyAdded($('#tag3').val()))
                return false;
            createListElement('#tag3');
            return false;
        }
        if (isNumeric($('#tag2').val())) {
            if (checkIfAlreadyAdded($('#tag2').val()))
                return false;
            createListElement('#tag2');
            return false;
        }
        if (isNumeric($('#tag1').val())) {
            if (checkIfAlreadyAdded($('#tag1').val()))
                return false;
            createListElement('#tag1');
            return false;
        }
    };

    function checkIfAlreadyAdded(id) {
        var elId = 'a[data-id="{0}"]'.format(id);
        if ($(elId).length) {
            return true;
        } else {
            return false;
        }
    };

    function createListElement(elementId) {
        $('#addTagList').append(
            '<div class="tech-tags-item"><input type="hidden" name="tagIds[]" value="{0}" /><a data-id="{0}" data-name="{1}">{1} </a><span class="remove-btn" onclick="removeListElement(\'div a[data-id=&quot;{0}&quot;]\')">X</span></div>'
                .format($(elementId).val(), getTagName($(elementId + ' option:selected').text())));
    };

    function removeListElement(tag) {
        $(tag).parent().remove();
    };
    
    function changeTagSelected() {
        var breadcrumbs = "Selected tag: ";
        var selectedTag = "Non selected";

        if (isNumeric($('#tag1').val())) {
            breadcrumbs += getTagName($('#tag1' + ' option:selected').text());
            selectedTag = getTagName($('#tag1' + ' option:selected').text());
        }
        if (isNumeric($('#tag2').val())) {
            breadcrumbs += ' > ';
            breadcrumbs += getTagName($('#tag2' + ' option:selected').text());
            selectedTag = getTagName($('#tag2' + ' option:selected').text());
        }
        if (isNumeric($('#tag3').val())) {
            breadcrumbs += ' > ';
            breadcrumbs += getTagName($('#tag3' + ' option:selected').text());
            selectedTag = getTagName($('#tag3' + ' option:selected').text());
        }
        if (isNumeric($('#tag4').val())) {
            breadcrumbs += ' > ';
            breadcrumbs += getTagName($('#tag4' + ' option:selected').text());
            selectedTag = getTagName($('#tag4' + ' option:selected').text());
        }
        
        $('#selectedTagList').html(breadcrumbs);
        $('#activeSelectedTag').html(selectedTag);
    };
    
    function getTagName(value) {
        var index = value.indexOf(' - ');
        if (index == -1)
            return value;
        return value.substring(0, index);
    };

    function isNumeric(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    };

    $(document).ready(function () {
        $('.multi-select').multiselect();
    });

</script>
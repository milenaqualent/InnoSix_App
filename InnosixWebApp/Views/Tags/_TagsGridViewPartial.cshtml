@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "TagsGridView";
        settings.CallbackRouteValues = new { Controller = "Tags", Action = "TagsGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Tags", Action = "TagsGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Tags", Action = "TagsGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Tags", Action = "TagsGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = false;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.CommandButtonInitialize = (s, e) =>
        {
            if (e.ButtonType == ColumnCommandButtonType.Delete)
            {
                var g = s as MVCxGridView;
                var hasRelations = (bool) g.GetRowValues(e.VisibleIndex, "HasRelations");
                e.Visible = !hasRelations;
            }
        };

        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Edit", "EditTag", new { id = DataBinder.Eval(c.DataItem, "Id")})
                    );
            });
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
        });
        settings.Columns.Add("Id");
        settings.Columns.Add("TagName");
        settings.Columns.Add("ParentsCount").ReadOnly = true;
        settings.Columns.Add("ChildrenCount").ReadOnly = true;
        settings.Columns.Add("UsageCount").ReadOnly = true;
        settings.Columns.Add("Description").ReadOnly = true;
    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()